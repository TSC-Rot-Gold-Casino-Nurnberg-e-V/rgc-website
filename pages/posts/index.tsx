import Head from "next/head";
import { PostCard } from "../../components/PostCard";
import { getPosts } from "../../api/api";
import { Post } from "../../model/Post";
import { Button } from "../../components/Button";
import { useState } from "react";
import { GetStaticProps, InferGetStaticPropsType } from "next";

export const getStaticProps: GetStaticProps<{
  posts: Post[];
  totalPostCount: number;
}> = async () => {
  const { posts, pagination } = await getPosts(6);
  return {
    props: { posts: posts, totalPostCount: pagination.total },
  };
};

export default function Posts({
  posts,
  totalPostCount,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  const [displayedPosts, setDisplayedPosts] = useState<Array<Post>>(posts);
  const [page, setPage] = useState(1);
  const [isLoading, setIsLoading] = useState(false);

  async function getMorePosts() {
    setIsLoading(true);
    const nextPage = page + 1;
    const { posts } = await getPosts(6, nextPage);
    setDisplayedPosts((prevState) => {
      return [...prevState, ...posts];
    });
    setPage(nextPage);
    setIsLoading(false);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="default-padding mx-auto flex flex-col gap-6 bg-base-950 py-12">
        <div className="group/container m-auto grid max-w-screen-lg justify-center gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {displayedPosts.map((post) => (
            <PostCard
              postID={post.id}
              key={post.id}
              title={post.attributes.title}
              previewText={post.attributes.previewText}
              publishedDate={post.attributes.publishedAt}
              previewImage={
                post.attributes.mainImage.data.attributes.formats.small?.url ??
                post.attributes.mainImage.data.attributes.url
              }
            />
          ))}
        </div>
        {displayedPosts.length < totalPostCount && (
          <div className="mx-auto w-fit">
            <Button
              onClick={getMorePosts}
              disabled={isLoading}
              className={isLoading ? "loading" : undefined}
            >
              Mehr anzeigen
            </Button>
          </div>
        )}
      </main>
    </>
  );
}
